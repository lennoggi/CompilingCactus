# Whenever this version string changes, the application is configured
# and rebuilt from scratch
VERSION = Frontera_Intel23

CPP = cpp
FPP = cpp
CC  = mpicc
CXX = mpicxx
F77 = mpifc
F90 = mpifc

##CPPFLAGS = -g -DMPICH_SKIP_MPICXX -DMPICH_IGNORE_CXX_SEEK
CPPFLAGS = -g -D_XOPEN_SOURCE -D_XOPEN_SOURCE_EXTENDED
FPPFLAGS = -g -traditional
CFLAGS   = -g -traceback -debug all -xCORE-AVX512 -align -std=gnu99
CXXFLAGS = -g -traceback -debug all -xCORE-AVX512 -align -std=gnu++11
F77FLAGS = -g -traceback -debug all -xCORE-AVX512 -align -pad -safe-cray-ptr
F90FLAGS = -g -traceback -debug all -xCORE-AVX512 -align -pad -safe-cray-ptr
LDFLAGS  = -rdynamic -xCORE-AVX512

C_LINE_DIRECTIVES = yes
F_LINE_DIRECTIVES = yes

VECTORISE                = yes
VECTORISE_ALIGNED_ARRAYS = no
VECTORISE_INLINE         = no

DEBUG           = no
CPP_DEBUG_FLAGS = -DCARPET_DEBUG
FPP_DEBUG_FLAGS = -DCARPET_DEBUG
C_DEBUG_FLAGS   = -O0
CXX_DEBUG_FLAGS = -O0
F77_DEBUG_FLAGS = -O0 -check bounds -check format
F90_DEBUG_FLAGS = -O0 -check bounds -check format

OPTIMISE = yes
CPP_OPTIMISE_FLAGS = ## -DCARPET_OPTIMISE -DNDEBUG
FPP_OPTIMISE_FLAGS = ## -DCARPET_OPTIMISE -DNDEBUG
C_OPTIMISE_FLAGS   = -Ofast  ## -mkl=sequential  ##-Ofast
CXX_OPTIMISE_FLAGS = -Ofast  ## -mkl=sequential  ##-Ofast
F77_OPTIMISE_FLAGS = -Ofast  ## -Ofast
F90_OPTIMISE_FLAGS = -Ofast  ## -mkl=sequential  ##-Ofast

CPP_NO_OPTIMISE_FLAGS  =
FPP_NO_OPTIMISE_FLAGS  =
C_NO_OPTIMISE_FLAGS    = -O0
CXX_NO_OPTIMISE_FLAGS  = -O0
CUCC_NO_OPTIMISE_FLAGS =
F77_NO_OPTIMISE_FLAGS  = -O0
F90_NO_OPTIMISE_FLAGS  = -O0

PROFILE           = no
CPP_PROFILE_FLAGS =
FPP_PROFILE_FLAGS =
C_PROFILE_FLAGS   = -pg
CXX_PROFILE_FLAGS = -pg
F77_PROFILE_FLAGS = -pg
F90_PROFILE_FLAGS = -pg

OPENMP           = yes
CPP_OPENMP_FLAGS = -fopenmp
FPP_OPENMP_FLAGS = -fopenmp
C_OPENMP_FLAGS   = -fopenmp
CXX_OPENMP_FLAGS = -fopenmp
F77_OPENMP_FLAGS = -fopenmp
F90_OPENMP_FLAGS = -fopenmp

WARN           = yes
CPP_WARN_FLAGS = -Wall
FPP_WARN_FLAGS =
C_WARN_FLAGS   = -Wall -Wno-error=incompatible-function-pointer-types -Wno-error=implicit-function-declaration
CXX_WARN_FLAGS = -Wall
F77_WARN_FLAGS =
F90_WARN_FLAGS =


# See the Cactus users' guide
# (https://einsteintoolkit.org/usersguide/UsersGuide.html, section
# 'B2.2 Compiling with Extra Packages')
#
# Also see the Intel MKL Link Line Advisor
# (https://www.intel.com/content/www/us/en/developer/tools/oneapi/onemkl-link-line-advisor.html#gs.or5ld9)
# for instructions on how to link the MKL libraries and try to compile BLAS,
# LAPACK and OpenBLAS

BLAS_DIR  = NO_BUILD
BLAS_LIBS = -mkl
##BLAS_DIR  = ${TACC_MKL_DIR}
##BLAS_LIBS = mkl_intel_ilp64 mkl_intel_thread mkl_core

FFTW3_DIR = ${TACC_FFTW3_DIR}

GSL_DIR = ${TACC_GSL_DIR}

HDF5_DIR = ${TACC_HDF5_DIR}

HWLOC_DIR        = ${TACC_HWLOC_DIR}
HWLOC_EXTRA_LIBS = numa

LAPACK_DIR  = NO_BUILD
LAPACK_LIBS = -mkl
##LAPACK_DIR  = ${TACC_MKL_DIR}
##LAPACK_LIBS = mkl_intel_ilp64 mkl_intel_thread mkl_core

LIBJPEG_DIR = /usr/lib64

##LORENE_DIR        = /home1/07825/lennoggi/Lorene
##LORENE_EXTRA_LIBS = fftw3

MPI_DIR = ${TACC_IMPI_DIR}

OPENBLAS_DIR  = NO_BUILD
OPENBLAS_LIBS = -mkl
##OPENBLAS_DIR  = ${TACC_MKL_DIR}
##OPENBLAS_LIBS = mkl_intel_ilp64 mkl_intel_thread mkl_core

OPENSSL_DIR = /usr/lib64

PAPI_DIR = ${TACC_PAPI_DIR}

##PETSC_DIR = ${TACC_PETSC_DIR}

PTHREADS_DIR = NO_BUILD

ZLIB_DIR = /usr/lib64
